{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "dc415c37b325dc680ffb9b9fde6ec23fb05e6824d32803fc94aedda213082fb9",
          "withoutMetadata": "73bd96c123d626073431ae807356c1856ba24b5d769b7df731c6a83477324b93",
          "linkedWithoutMetadata": "73bd96c123d626073431ae807356c1856ba24b5d769b7df731c6a83477324b93"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)2328_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2328_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2328_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2328_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "606c4e4f9c737ef04ba15c39ff76aeff20dd9a13ec417a8856c643ceb86321ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "1660a137012ba855a81cd24fe3461b1d51fe26285b0814a20b61752b23661023",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "2a0cbb8d227a948892cb9deb8f5b3cbe42f303f4bcd5f782fe940f7d6762074b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts/access/TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts/access/TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)3623",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)3623": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable": {
        "src": "contracts/access/TldAccessableUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)3623",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts/access/TldAccessableUpgradeable.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)3623": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable": {
        "src": "contracts/access/TreasuryAccessableUpgradeable.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)3439",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts/access/TreasuryAccessableUpgradeable.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)3439": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts/admin/IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts/admin/IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts/admin/ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/SANN.sol:SANN": {
        "src": "contracts/admin/SANN.sol:11",
        "version": {
          "withMetadata": "6a810c93714002b2c1c02750576a244f7be139b06b09005af977be37d54805f8",
          "withoutMetadata": "347c827eed82a2947ecb3f02c392934bdef260535c2f04e5c40ba5cb5c685e7c",
          "linkedWithoutMetadata": "347c827eed82a2947ecb3f02c392934bdef260535c2f04e5c40ba5cb5c685e7c"
        },
        "inherit": [
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address)",
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldController()",
          "tldBase(uint256)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)3673_storage)",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)3673_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)3673_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/Base.sol:Base": {
        "src": "contracts/base/Base.sol:13",
        "version": {
          "withMetadata": "b18c28fd8d78b0c91661a82bd9b78067464638d070313f410c78863e322f1194",
          "withoutMetadata": "d0319ebea820336637a653d7c6725c16cec7fc2308eb0b0f8ac3ca8b036cb9f1",
          "linkedWithoutMetadata": "d0319ebea820336637a653d7c6725c16cec7fc2308eb0b0f8ac3ca8b036cb9f1"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/base/IBase.sol:IBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,address,uint256,string,string)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)",
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "registerOnly(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "supportsInterface(bytes4)",
          "setURI(string)",
          "tokenURI(uint256)",
          "setDefaultRoyalty(address,uint96)",
          "deleteDefaultRoyalty()",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base",
            "src": "contracts/base/Base.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplyAmount",
            "src": "contracts/base/Base.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)2328_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2328_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "sann",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISANN)3623",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "expiries",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Base",
              "src": "contracts/base/Base.sol:17"
            },
            {
              "label": "sidRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(ISidRegistry)10155",
              "contract": "Base",
              "src": "contracts/base/Base.sol:19"
            },
            {
              "label": "baseNode",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes32",
              "contract": "Base",
              "src": "contracts/base/Base.sol:21"
            },
            {
              "label": "identifier",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts/base/Base.sol:23"
            },
            {
              "label": "tld",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts/base/Base.sol:25"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts/base/Base.sol:27"
            },
            {
              "label": "supplyAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts/base/Base.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ISANN)3623": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(ISidRegistry)10155": {
              "label": "contract ISidRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2328_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2328_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/IBase.sol:IBase": {
        "src": "contracts/base/IBase.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "setURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts/common/AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts/common/StringUtils.sol:4",
        "version": {
          "withMetadata": "3aa1d5aab200d10bb5ffe643be21c1cfd6af8a069e59667b204a1011ee2c4e75",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts/controller/IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/RegistrarController.sol:RegistrarController": {
        "src": "contracts/controller/RegistrarController.sol:36",
        "version": {
          "withMetadata": "78c198f939509959a16ed7f4e4babe5885fda664a53bcd416463896352672592",
          "withoutMetadata": "80e224e525057e32d86d40c3f5986575a75cdf7a53190634b93f61fea4fb829d",
          "linkedWithoutMetadata": "80e224e525057e32d86d40c3f5986575a75cdf7a53190634b93f61fea4fb829d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address)",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)",
          "()",
          "recoverFunds(address,address,uint256)",
          "withdraw(uint256)",
          "withdrawPlatformFee()",
          "getPriceOracle(uint256)",
          "rentPriceInUSD(uint256,string,uint256)",
          "rentPrice(uint256,string,uint256)",
          "bulkRentPrice(uint256,string[],uint256)",
          "bulkRegisterSimulate(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenewSimulate(uint256,string[],uint256,address,bytes[])",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "available(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)3623",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts/access/TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)3439",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts/access/TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)5402_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)5424_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)8982)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)3473",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)8982",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)10018",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)3439": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)8648": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)3473": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)8687": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)8982": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)8722": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)8769": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)8808": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)8859": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)10018": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)8910": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)3623": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)8982)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)5402_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)5424_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)5402_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)5424_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)8722",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)8687",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)8648",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)8910",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)8808",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)8769",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)8859",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts/hook/IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts/hook/IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts/hook/IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts/hook/IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts/hook/IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts/hook/IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts/hook/IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts/price-oracle/IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts/referral/IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts/referral/ReferralHub.sol:15",
        "version": {
          "withMetadata": "34505d28f55e4df259e9cccfdfe1e5a0661bae7f484616a27f540cde6954e57d",
          "withoutMetadata": "d6848d2aa87546ecbd49f015680e8ac96595b51eaed8dd77a5776b32e25e45e6",
          "linkedWithoutMetadata": "d6848d2aa87546ecbd49f015680e8ac96595b51eaed8dd77a5776b32e25e45e6"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts/referral/ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)3623",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)9088_storage))",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)8982",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)8982": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)3623": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)9088_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)9088_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)9088_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar": {
        "src": "contracts/registrar/IReverseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/ISidRegistry.sol:ISidRegistry": {
        "src": "contracts/registry/ISidRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface": {
        "src": "contracts/resolvers/ISupportsInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Resolver.sol:Resolver": {
        "src": "contracts/resolvers/Resolver.sol:21",
        "inherit": [
          "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver",
          "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "setAddr(bytes32,address)",
          "setAddr(bytes32,uint256,bytes)",
          "setContenthash(bytes32,bytes)",
          "setDnsrr(bytes32,bytes)",
          "setName(bytes32,string)",
          "setPubkey(bytes32,bytes32,bytes32)",
          "setText(bytes32,string,string)",
          "setInterface(bytes32,bytes4,address)",
          "multicall(bytes[])",
          "content(bytes32)",
          "multihash(bytes32)",
          "setContent(bytes32,bytes32)",
          "setMultihash(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ResolverBase.sol:ResolverBase": {
        "src": "contracts/resolvers/ResolverBase.sol:7",
        "inherit": [
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "clearRecords(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/SupportsInterface.sol:SupportsInterface": {
        "src": "contracts/resolvers/SupportsInterface.sol:6",
        "inherit": [
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver": {
        "src": "contracts/resolvers/profiles/IABIResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ABI(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver": {
        "src": "contracts/resolvers/profiles/IAddrResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts/resolvers/profiles/IAddressResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts/resolvers/profiles/IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contenthash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver": {
        "src": "contracts/resolvers/profiles/IDNSRecordResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dnsRecord(bytes32,bytes32,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver": {
        "src": "contracts/resolvers/profiles/IDNSZoneResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "zonehash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver": {
        "src": "contracts/resolvers/profiles/IExtendedResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver": {
        "src": "contracts/resolvers/profiles/IInterfaceResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "interfaceImplementer(bytes32,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/INameResolver.sol:INameResolver": {
        "src": "contracts/resolvers/profiles/INameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver": {
        "src": "contracts/resolvers/profiles/IPubkeyResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pubkey(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver": {
        "src": "contracts/resolvers/profiles/ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "text(bytes32,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver": {
        "src": "contracts/resolvers/profiles/ITldNameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tldName(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver": {
        "src": "contracts/resolvers/profiles/IVersionableResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordVersions(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/controller/mocks/DummyUpgradeableRegistrar.sol:DummyUpgradeableRegistrar": {
        "src": "test/controller/mocks/DummyUpgradeableRegistrar.sol:6",
        "version": {
          "withMetadata": "0a206f437e16320d996eeea72c19fca902bf4b268c407b86afade586bf14c41e",
          "withoutMetadata": "99bc0d66acc53fc3167938a1e0d43c769ed8c214eb002ac673351023c06d10d4",
          "linkedWithoutMetadata": "99bc0d66acc53fc3167938a1e0d43c769ed8c214eb002ac673351023c06d10d4"
        },
        "inherit": [
          "contracts/controller/RegistrarController.sol:RegistrarController",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)3623",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts/access/TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)3439",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts/access/TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)5402_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)5424_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)8982)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)3473",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)8982",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)10018",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)3439": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)8648": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)3473": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)8687": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)8982": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)8722": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)8769": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)8808": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)8859": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)10018": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)8910": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)3623": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)8982)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)5402_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)5424_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)5402_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)5424_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)8722",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)8687",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)8648",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)8910",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)8808",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)8769",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)8859",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts/access/TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts/access/TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts/access/TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts/access/TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)867",
              "contract": "TreasuryAccessable",
              "src": "contracts/access/TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)867": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts/admin/IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts/admin/IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts/admin/ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts/admin/ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts/admin/PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "c2334f775deb23541018ca1d46543bf22e3534c08d5c62df1b84cd8893f8abf6",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts/admin/PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)867",
              "contract": "TreasuryAccessable",
              "src": "contracts/access/TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts/admin/PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6616",
              "contract": "PrepaidPlatformFee",
              "src": "contracts/admin/PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)867": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6616": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts/admin/TldFactory.sol:23",
        "version": {
          "withMetadata": "2a0ccbab42f12dd2fd4e6a610ad520601fb18f32015e47fc98cfaaeda212c05e",
          "withoutMetadata": "2c291d18ab5f77794a8ceefc2ee9b9266e93cf1d77bbb97d07ef2ea1d84e48f4",
          "linkedWithoutMetadata": "2c291d18ab5f77794a8ceefc2ee9b9266e93cf1d77bbb97d07ef2ea1d84e48f4"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts/admin/TldFactory.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:25"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)6632",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:28"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:31"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)2725",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:34"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)6694",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:38"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)3273",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:41"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)3011",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:42"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)7627",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:45"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)1262",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3011": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3273": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6632": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6694": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2725": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1262": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7627": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts/common/AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts/common/StringUtils.sol:4",
        "version": {
          "withMetadata": "3aa1d5aab200d10bb5ffe643be21c1cfd6af8a069e59667b204a1011ee2c4e75",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts/controller/IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts/giftcard/GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "7ef568c62058d0da7ca18fe0afd5fbcb260e3aa3084594f4205632a65de9f55a",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts/giftcard/GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts/giftcard/GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "4ef3ef66b4a8dfb68ee3516b4cd3eacb0830fb18751a1231134d338a0a38f8b9",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts/giftcard/GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts/giftcard/GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts/giftcard/GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts/hook/DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "98360e4a91e197a3e3b281d2ca762d243888911b15a0ebebf0fe39125203f5c8",
          "withoutMetadata": "07e2c95066efe7550f3d65d8cfc2b9b9726662f331b1b60f304db9a794251340",
          "linkedWithoutMetadata": "07e2c95066efe7550f3d65d8cfc2b9b9726662f331b1b60f304db9a794251340"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts/hook/DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/hook/DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6544",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)867",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3011",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6616",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3011": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)867": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6616": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6544": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts/hook/DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "332fe2e0260a9a061e0da5217cf5613add609a6fef4c7499cf630e8941de1b4f",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts/hook/DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/hook/DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6544",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6544": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts/hook/IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts/hook/IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts/hook/IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts/hook/IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts/hook/IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts/hook/IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts/hook/IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts/preregistration/PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "7afd8715eab29cb748cadc690e1a8ffaa7269ef1683e3d930a8809f7dbc93cf8",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts/preregistration/PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/preregistration/PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5268_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5254_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5273_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5273_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5268_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5254_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5254_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5273_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5268_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts/price-oracle/IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts/proxy/IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts/proxy/IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts/referral/IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts/referral/ReferralHub.sol:15",
        "version": {
          "withMetadata": "34505d28f55e4df259e9cccfdfe1e5a0661bae7f484616a27f540cde6954e57d",
          "withoutMetadata": "d6848d2aa87546ecbd49f015680e8ac96595b51eaed8dd77a5776b32e25e45e6",
          "linkedWithoutMetadata": "d6848d2aa87546ecbd49f015680e8ac96595b51eaed8dd77a5776b32e25e45e6"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts/referral/ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6800_storage))",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6616",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6616": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6800_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6800_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6800_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/ISidRegistry.sol:ISidRegistry": {
        "src": "contracts/registry/ISidRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts/access/TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts/access/TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts/access/TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts/access/TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)867",
              "contract": "TreasuryAccessable",
              "src": "contracts/access/TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)867": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts/admin/IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts/admin/IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts/admin/ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts/admin/ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts/admin/PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "c2334f775deb23541018ca1d46543bf22e3534c08d5c62df1b84cd8893f8abf6",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts/admin/PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)867",
              "contract": "TreasuryAccessable",
              "src": "contracts/access/TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts/admin/PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6614",
              "contract": "PrepaidPlatformFee",
              "src": "contracts/admin/PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)867": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6614": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts/admin/TldFactory.sol:23",
        "version": {
          "withMetadata": "8165886c54d698bceb5087cb591bb4a93de1612c388b5459152015f94a8e43e9",
          "withoutMetadata": "0a5e2406d1d62ce96d765738836cae7e0b228f12dc25001efe16ad3249465281",
          "linkedWithoutMetadata": "0a5e2406d1d62ce96d765738836cae7e0b228f12dc25001efe16ad3249465281"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts/admin/TldFactory.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:25"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)6630",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:28"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:31"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)2725",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:34"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)6692",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:38"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)3273",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:41"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)3011",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:42"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)7625",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:45"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)1262",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3011": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3273": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6630": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6692": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2725": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1262": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7625": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts/common/AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts/common/StringUtils.sol:4",
        "version": {
          "withMetadata": "3aa1d5aab200d10bb5ffe643be21c1cfd6af8a069e59667b204a1011ee2c4e75",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts/controller/IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts/giftcard/GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "7ef568c62058d0da7ca18fe0afd5fbcb260e3aa3084594f4205632a65de9f55a",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts/giftcard/GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts/giftcard/GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "4ef3ef66b4a8dfb68ee3516b4cd3eacb0830fb18751a1231134d338a0a38f8b9",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts/giftcard/GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts/giftcard/GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts/giftcard/GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts/hook/DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "aefa119517983ae6e7c0226739ab0318ed51021d0a3fc6ff493ab5be2d8a8031",
          "withoutMetadata": "07e2c95066efe7550f3d65d8cfc2b9b9726662f331b1b60f304db9a794251340",
          "linkedWithoutMetadata": "07e2c95066efe7550f3d65d8cfc2b9b9726662f331b1b60f304db9a794251340"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts/hook/DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/hook/DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6542",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)867",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3011",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6614",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3011": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)867": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6614": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6542": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts/hook/DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "332fe2e0260a9a061e0da5217cf5613add609a6fef4c7499cf630e8941de1b4f",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts/hook/DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/hook/DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6542",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6542": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts/hook/IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts/hook/IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts/hook/IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts/hook/IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts/hook/IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts/hook/IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts/hook/IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts/preregistration/PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "7afd8715eab29cb748cadc690e1a8ffaa7269ef1683e3d930a8809f7dbc93cf8",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts/preregistration/PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/preregistration/PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5266_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5252_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5271_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5271_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5266_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5252_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5252_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5271_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5266_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts/price-oracle/IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts/proxy/IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts/proxy/IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts/referral/IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts/referral/ReferralHub.sol:15",
        "version": {
          "withMetadata": "34505d28f55e4df259e9cccfdfe1e5a0661bae7f484616a27f540cde6954e57d",
          "withoutMetadata": "d6848d2aa87546ecbd49f015680e8ac96595b51eaed8dd77a5776b32e25e45e6",
          "linkedWithoutMetadata": "d6848d2aa87546ecbd49f015680e8ac96595b51eaed8dd77a5776b32e25e45e6"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts/referral/ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1051",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6798_storage))",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6614",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6614": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1051": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6798_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6798_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6798_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/ISidRegistry.sol:ISidRegistry": {
        "src": "contracts/registry/ISidRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "e5deb99860cc802a1c521eaa54ad410fe8136d38debfa69a916bf1a6a45a5888",
          "withoutMetadata": "fa2f69fb30823d810b721389daaddd0e792b08ea73c9ba1dffb557a4a56a1513",
          "linkedWithoutMetadata": "fa2f69fb30823d810b721389daaddd0e792b08ea73c9ba1dffb557a4a56a1513"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "dc415c37b325dc680ffb9b9fde6ec23fb05e6824d32803fc94aedda213082fb9",
          "withoutMetadata": "73bd96c123d626073431ae807356c1856ba24b5d769b7df731c6a83477324b93",
          "linkedWithoutMetadata": "73bd96c123d626073431ae807356c1856ba24b5d769b7df731c6a83477324b93"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3889_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3889_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3889_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3889_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "606c4e4f9c737ef04ba15c39ff76aeff20dd9a13ec417a8856c643ceb86321ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "1660a137012ba855a81cd24fe3461b1d51fe26285b0814a20b61752b23661023",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "2a0cbb8d227a948892cb9deb8f5b3cbe42f303f4bcd5f782fe940f7d6762074b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts/access/TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts/access/TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable": {
        "src": "contracts/access/TldAccessableUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts/access/TldAccessableUpgradeable.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts/access/TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts/access/TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)5034",
              "contract": "TreasuryAccessable",
              "src": "contracts/access/TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)5034": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable": {
        "src": "contracts/access/TreasuryAccessableUpgradeable.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)5034",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts/access/TreasuryAccessableUpgradeable.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)5034": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts/admin/IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts/admin/IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts/admin/ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts/admin/ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PlatformConfig.sol:PlatformConfig": {
        "src": "contracts/admin/PlatformConfig.sol:9",
        "version": {
          "withMetadata": "91edb306251deb32ac0b8b1e64c259a38442498b316b22f0636ecc3a14de248e",
          "withoutMetadata": "87a5f930fb25f12e8c5cf35b769406c1cc4e17d6f2db906e2a7ecbd6127178f1",
          "linkedWithoutMetadata": "87a5f930fb25f12e8c5cf35b769406c1cc4e17d6f2db906e2a7ecbd6127178f1"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPlatformConfig.sol:IPlatformConfig"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(uint256,uint256,address)",
          "setDefaultMinPlatformFee(uint256)",
          "setDefaultRateBps(uint256)",
          "setPlatformFeeCollector(address)",
          "setCustomizedPlatformFee(uint256,uint256,uint256,bool)",
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PlatformConfig",
            "src": "contracts/admin/PlatformConfig.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "customizedConfigs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(CustomizedConfig)4991_storage)",
              "contract": "PlatformConfig",
              "src": "contracts/admin/PlatformConfig.sol:12"
            },
            {
              "label": "platformFeeCollector",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PlatformConfig",
              "src": "contracts/admin/PlatformConfig.sol:14"
            },
            {
              "label": "defaultMinPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts/admin/PlatformConfig.sol:16"
            },
            {
              "label": "defaultRateBps",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts/admin/PlatformConfig.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(CustomizedConfig)4991_storage)": {
              "label": "mapping(uint256 => struct IPlatformConfig.CustomizedConfig)",
              "numberOfBytes": "32"
            },
            "t_struct(CustomizedConfig)4991_storage": {
              "label": "struct IPlatformConfig.CustomizedConfig",
              "members": [
                {
                  "label": "minPlatformFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeRateBps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts/admin/PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "c2334f775deb23541018ca1d46543bf22e3534c08d5c62df1b84cd8893f8abf6",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts/admin/PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)5034",
              "contract": "TreasuryAccessable",
              "src": "contracts/access/TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts/admin/PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)17484",
              "contract": "PrepaidPlatformFee",
              "src": "contracts/admin/PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)5034": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)17484": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/SANN.sol:SANN": {
        "src": "contracts/admin/SANN.sol:11",
        "version": {
          "withMetadata": "6a810c93714002b2c1c02750576a244f7be139b06b09005af977be37d54805f8",
          "withoutMetadata": "347c827eed82a2947ecb3f02c392934bdef260535c2f04e5c40ba5cb5c685e7c",
          "linkedWithoutMetadata": "347c827eed82a2947ecb3f02c392934bdef260535c2f04e5c40ba5cb5c685e7c"
        },
        "inherit": [
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address)",
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldController()",
          "tldBase(uint256)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)5784_storage)",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)5784_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)5784_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts/admin/TldFactory.sol:23",
        "version": {
          "withMetadata": "fc1aaedf3392ffcd6d7c3a50a317794879d32c4e33655bb56ded6b2358458d5f",
          "withoutMetadata": "35c05fa861275ff772835a1ed77fee1eabbdc0108d74946d661cd9eb6bf4cb15",
          "linkedWithoutMetadata": "35c05fa861275ff772835a1ed77fee1eabbdc0108d74946d661cd9eb6bf4cb15"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts/admin/TldFactory.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:25"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)18506",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:28"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:31"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)8674",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:34"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)18568",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:38"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)13550",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:41"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)13288",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:42"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)19704",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:45"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)5734",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)13288": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)13550": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)18506": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)18568": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)8674": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)5734": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)19704": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/Base.sol:Base": {
        "src": "contracts/base/Base.sol:13",
        "version": {
          "withMetadata": "b18c28fd8d78b0c91661a82bd9b78067464638d070313f410c78863e322f1194",
          "withoutMetadata": "d0319ebea820336637a653d7c6725c16cec7fc2308eb0b0f8ac3ca8b036cb9f1",
          "linkedWithoutMetadata": "d0319ebea820336637a653d7c6725c16cec7fc2308eb0b0f8ac3ca8b036cb9f1"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/base/IBase.sol:IBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,address,uint256,string,string)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)",
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "registerOnly(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "supportsInterface(bytes4)",
          "setURI(string)",
          "tokenURI(uint256)",
          "setDefaultRoyalty(address,uint96)",
          "deleteDefaultRoyalty()",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base",
            "src": "contracts/base/Base.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplyAmount",
            "src": "contracts/base/Base.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)3889_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3889_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "sann",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "expiries",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Base",
              "src": "contracts/base/Base.sol:17"
            },
            {
              "label": "sidRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(ISidRegistry)20431",
              "contract": "Base",
              "src": "contracts/base/Base.sol:19"
            },
            {
              "label": "baseNode",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes32",
              "contract": "Base",
              "src": "contracts/base/Base.sol:21"
            },
            {
              "label": "identifier",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts/base/Base.sol:23"
            },
            {
              "label": "tld",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts/base/Base.sol:25"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts/base/Base.sol:27"
            },
            {
              "label": "supplyAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts/base/Base.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(ISidRegistry)20431": {
              "label": "contract ISidRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3889_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3889_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/IBase.sol:IBase": {
        "src": "contracts/base/IBase.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "setURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts/common/AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts/common/StringUtils.sol:4",
        "version": {
          "withMetadata": "3aa1d5aab200d10bb5ffe643be21c1cfd6af8a069e59667b204a1011ee2c4e75",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts/controller/IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/RegistrarController.sol:RegistrarController": {
        "src": "contracts/controller/RegistrarController.sol:36",
        "version": {
          "withMetadata": "1283bdbb08d74b3c279378327b2f4f5ae32e426ffa7799c11008342470a43b62",
          "withoutMetadata": "80e224e525057e32d86d40c3f5986575a75cdf7a53190634b93f61fea4fb829d",
          "linkedWithoutMetadata": "80e224e525057e32d86d40c3f5986575a75cdf7a53190634b93f61fea4fb829d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address)",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)",
          "()",
          "recoverFunds(address,address,uint256)",
          "withdraw(uint256)",
          "withdrawPlatformFee()",
          "getPriceOracle(uint256)",
          "rentPriceInUSD(uint256,string,uint256)",
          "rentPrice(uint256,string,uint256)",
          "bulkRentPrice(uint256,string[],uint256)",
          "bulkRegisterSimulate(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenewSimulate(uint256,string[],uint256,address,bytes[])",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "available(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts/access/TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)5034",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts/access/TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)8295_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)8317_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)17484)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)5068",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)17484",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)19807",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)5034": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)15260": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)5068": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)15299": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)17484": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)15334": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)15381": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)15420": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)15471": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)19807": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)15522": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)17484)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)8295_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)8317_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)8295_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)8317_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)15334",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)15299",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)15260",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)15522",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)15420",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)15381",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)15471",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/create2factory/Create2Factory.sol:Create2Factory": {
        "src": "contracts/create2factory/Create2Factory.sol:15",
        "version": {
          "withMetadata": "2836252593ba3867eb98173ab13cacc0e88983989bcf61cc3750b474b780f930",
          "withoutMetadata": "59ffeed0577b600c428a56be18cec4c4fa97479570d39cf3bcd04435fdfb6618",
          "linkedWithoutMetadata": "59ffeed0577b600c428a56be18cec4c4fa97479570d39cf3bcd04435fdfb6618"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "safeCreate2(bytes32,bytes)",
          "findCreate2Address(bytes32,bytes)",
          "findCreate2AddressViaHash(bytes32,bytes32)",
          "hasBeenDeployed(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_deployed",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Create2Factory",
              "src": "contracts/create2factory/Create2Factory.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/domain-governer/IVerifiedTldHub.sol:IVerifiedTldHub": {
        "src": "contracts/domain-governer/IVerifiedTldHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateTldInfo(string,uint256,uint256,address,string)",
          "removeTldInfo(uint256,string)",
          "getChainTlds(uint256)",
          "updateChainInfo(uint256,string,address,address)",
          "updateDefaultRpc(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/domain-governer/VerifiedTldHub.sol:VerifiedTldHub": {
        "src": "contracts/domain-governer/VerifiedTldHub.sol:5",
        "version": {
          "withMetadata": "c0b36f2c5c8f5cf421c727d139fc9941b83078e17f9ccbdd42dbd1e628628299",
          "withoutMetadata": "d21ce1fd5f1794b652e441c5dc281e5687ad97cc4a0008a437c8718e7be45456",
          "linkedWithoutMetadata": "d21ce1fd5f1794b652e441c5dc281e5687ad97cc4a0008a437c8718e7be45456"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updateTldInfo(string,uint256,uint256,address)",
          "removeTldInfo(uint256,string)",
          "updateChainInfo(uint256,string,address)",
          "updateDefaultRpc(uint256,string)",
          "getChainTlds(uint256)",
          "getTlds()",
          "getChainInfo(uint256)",
          "getTldInfo(string[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_struct(TldInfo)11747_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts/domain-governer/VerifiedTldHub.sol:29"
            },
            {
              "label": "chainTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts/domain-governer/VerifiedTldHub.sol:30"
            },
            {
              "label": "chainInfos",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(chainInfo)11754_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts/domain-governer/VerifiedTldHub.sol:31"
            },
            {
              "label": "tlds",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "VerifiedTldHub",
              "src": "contracts/domain-governer/VerifiedTldHub.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(TldInfo)11747_storage)": {
              "label": "mapping(string => struct VerifiedTldHub.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
              "label": "mapping(uint256 => string[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(chainInfo)11754_storage)": {
              "label": "mapping(uint256 => struct VerifiedTldHub.chainInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)11747_storage": {
              "label": "struct VerifiedTldHub.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identifier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "chainId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "registry",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(chainInfo)11754_storage": {
              "label": "struct VerifiedTldHub.chainInfo",
              "members": [
                {
                  "label": "chainId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "defaultRpc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sann",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardBase.sol:GiftCardBase": {
        "src": "contracts/giftcard/GiftCardBase.sol:10",
        "version": {
          "withMetadata": "3b4636848cc6f0e48a3311fab2b827a64f68828c4dc43669309c70f0d0befa05",
          "withoutMetadata": "d6cd9bd33eb08c820a438a174b580c707ccafaff9d7efc5bfd696ad27438ca5e",
          "linkedWithoutMetadata": "d6cd9bd33eb08c820a438a174b580c707ccafaff9d7efc5bfd696ad27438ca5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address)",
          "setURI(string)",
          "uri(uint256)",
          "name()",
          "symbol()",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])",
          "batchBurn(address,uint256[],uint256[])",
          "addController(address)",
          "removeController(address)",
          "pause()",
          "unpause()",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardBase",
            "src": "contracts/giftcard/GiftCardBase.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "sann",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardBase",
              "src": "contracts/giftcard/GiftCardBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardController.sol:GiftCardController": {
        "src": "contracts/giftcard/GiftCardController.sol:14",
        "version": {
          "withMetadata": "0ad6376bb17dff571c1c35597efab6a70546c6493f9558d20ae2e88340073e6f",
          "withoutMetadata": "9aeea9e0d55f318f24ce24301b43384d82aedaa067a2193360b008347bce6952",
          "linkedWithoutMetadata": "9aeea9e0d55f318f24ce24301b43384d82aedaa067a2193360b008347bce6952"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "price(uint256[],uint256[])",
          "batchRegister(uint256[],uint256[])",
          "batchRedeem(uint256,uint256[],uint256[])",
          "setPriceOracle(address)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardController",
            "src": "contracts/giftcard/GiftCardController.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "base",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(GiftCardBase)12559",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:15"
            },
            {
              "label": "voucher",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(GiftCardVoucher)13550",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:16"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)13288",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:17"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPlatformConfig)5034",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:18"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(PrepaidPlatformFee)5734",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:19"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPriceOracle)17484",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:20"
            },
            {
              "label": "tldGiftCardRevenues",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:25"
            }
          ],
          "types": {
            "t_contract(GiftCardBase)12559": {
              "label": "contract GiftCardBase",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardLedger)13288": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)13550": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)5034": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)17484": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)5734": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts/giftcard/GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "7ef568c62058d0da7ca18fe0afd5fbcb260e3aa3084594f4205632a65de9f55a",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts/giftcard/GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts/giftcard/GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "4ef3ef66b4a8dfb68ee3516b4cd3eacb0830fb18751a1231134d338a0a38f8b9",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts/giftcard/GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts/giftcard/GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts/giftcard/GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase": {
        "src": "contracts/giftcard/IGiftCardBase.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addController(address)",
          "removeController(address)",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts/hook/DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "57ea6eb3b93d0b96f38c458649cc14b90beb30a2695ea9002a9557661cbfa2c7",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts/hook/DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/hook/DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)17373",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)5034",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)13288",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)17484",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)13288": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)5034": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)17484": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)17373": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts/hook/DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "332fe2e0260a9a061e0da5217cf5613add609a6fef4c7499cf630e8941de1b4f",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts/hook/DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/hook/DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)17373",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)17373": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts/hook/IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts/hook/IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts/hook/IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts/hook/IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts/hook/IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts/hook/IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts/hook/IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/Auction.sol:Auction": {
        "src": "contracts/preregistration/Auction.sol:17",
        "version": {
          "withMetadata": "e6a769d992a4dfdcc2b48d3c6477d7463e2558cf4bee4b2b2117499a21f299cf",
          "withoutMetadata": "609b2d91d7c70823c6d3dd9085f158cfdd2799b73c594edaa541f762c5f4899f",
          "linkedWithoutMetadata": "609b2d91d7c70823c6d3dd9085f158cfdd2799b73c594edaa541f762c5f4899f"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,address,address,address)",
          "placeBid(string)",
          "nextBidFloorPrice(uint256,string)",
          "withdraw(string)",
          "ownerWithdraw()",
          "available(string)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Auction",
            "src": "contracts/preregistration/Auction.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "controller",
            "src": "contracts/preregistration/Auction.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/preregistration/Auction.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)5034",
              "contract": "Auction",
              "src": "contracts/preregistration/Auction.sol:20"
            },
            {
              "label": "state",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)17373",
              "contract": "Auction",
              "src": "contracts/preregistration/Auction.sol:21"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PrepaidPlatformFee)5734",
              "contract": "Auction",
              "src": "contracts/preregistration/Auction.sol:22"
            },
            {
              "label": "ownerCanWithdraw",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Auction",
              "src": "contracts/preregistration/Auction.sol:28"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)5034": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)17373": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)5734": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts/preregistration/PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "7afd8715eab29cb748cadc690e1a8ffaa7269ef1683e3d930a8809f7dbc93cf8",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts/preregistration/PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/preregistration/PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)16097_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)16083_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)16102_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)16102_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)16097_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)16083_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)16083_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)16102_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)16097_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/FixedOracle.sol:FixedOracle": {
        "src": "contracts/price-oracle/FixedOracle.sol:4",
        "version": {
          "withMetadata": "e8d09bbced93548d754fecaae76f441bec26393a15e21f115f92273aa84b033e",
          "withoutMetadata": "d7dba42030bf386a1b706b486ee359cefd1a96856794623b3a60aa16cf6877c4",
          "linkedWithoutMetadata": "d7dba42030bf386a1b706b486ee359cefd1a96856794623b3a60aa16cf6877c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(int256,uint8)",
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FixedOracle",
            "src": "contracts/price-oracle/FixedOracle.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "value",
            "src": "contracts/price-oracle/FixedOracle.sol:6"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals_val",
            "src": "contracts/price-oracle/FixedOracle.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts/price-oracle/IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/PriceOracle.sol:PriceOracle": {
        "src": "contracts/price-oracle/PriceOracle.sol:12",
        "version": {
          "withMetadata": "2a4775b2efce731b870337f39493c8bffe1b984ccac6c5215db3a33127a28c57",
          "withoutMetadata": "8db29f8f7f463514d9ce3caf23ad66ba066349231f39afa91975e6b44bcfbe35",
          "linkedWithoutMetadata": "8db29f8f7f463514d9ce3caf23ad66ba066349231f39afa91975e6b44bcfbe35"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/price-oracle/IPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address)",
          "initialize(address,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)",
          "premium(string,uint256,uint256)",
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setUsdOracle(address)",
          "decayedPremium(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PriceOracle",
            "src": "contracts/price-oracle/PriceOracle.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "prices",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))",
              "contract": "PriceOracle",
              "src": "contracts/price-oracle/PriceOracle.sol:15"
            },
            {
              "label": "startPremium",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts/price-oracle/PriceOracle.sol:20"
            },
            {
              "label": "endValue",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts/price-oracle/PriceOracle.sol:21"
            },
            {
              "label": "usdOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(AggregatorInterface)8006",
              "contract": "PriceOracle",
              "src": "contracts/price-oracle/PriceOracle.sol:24"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorInterface)8006": {
              "label": "contract AggregatorInterface",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))": {
              "label": "mapping(uint256 => mapping(uint8 => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint64)": {
              "label": "mapping(uint8 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/BaseCreator.sol:BaseCreator": {
        "src": "contracts/proxy/BaseCreator.sol:10",
        "version": {
          "withMetadata": "4dfb87a83d65f970a30cab078abfb11d7964c3f1bb21f3918f4db90099c247d5",
          "withoutMetadata": "08539d283dd91c98472509e0e639cc0081250ab573c1fba420ef8c6ab5552b6c",
          "linkedWithoutMetadata": "08539d283dd91c98472509e0e639cc0081250ab573c1fba420ef8c6ab5552b6c"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IBaseCreator.sol:IBaseCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCreator",
            "src": "contracts/proxy/BaseCreator.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "contracts/proxy/ERC1967Proxy.sol:6",
        "version": {
          "withMetadata": "7ff2c7ae44d1761fa44d96ad1d8e05e6b705f5fe9e70ccc8a8031ed1ac01f768",
          "withoutMetadata": "70df739a4f53ee5adecd514ce458b026d20c5fcbab8d183bdbb383e748679ad4",
          "linkedWithoutMetadata": "70df739a4f53ee5adecd514ce458b026d20c5fcbab8d183bdbb383e748679ad4"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes32)",
          "initialize(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/proxy/ERC1967Proxy.sol:17"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deployer",
            "src": "contracts/proxy/ERC1967Proxy.sol:8"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nameHash",
            "src": "contracts/proxy/ERC1967Proxy.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts/proxy/IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts/proxy/IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/PreRegistrationCreator.sol:PreRegistrationCreator": {
        "src": "contracts/proxy/PreRegistrationCreator.sol:15",
        "version": {
          "withMetadata": "fcc3f7b85711b851eeabe688e4ea5e9151637686672a085dca7ac4ca87b2ab9a",
          "withoutMetadata": "3052901f30a71f45be9f0e4004d1cfaa0d531c4b6c14df7d86a97c13068053c0",
          "linkedWithoutMetadata": "3052901f30a71f45be9f0e4004d1cfaa0d531c4b6c14df7d86a97c13068053c0"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationCreator",
            "src": "contracts/proxy/PreRegistrationCreator.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts/referral/IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts/referral/ReferralHub.sol:15",
        "version": {
          "withMetadata": "34505d28f55e4df259e9cccfdfe1e5a0661bae7f484616a27f540cde6954e57d",
          "withoutMetadata": "d6848d2aa87546ecbd49f015680e8ac96595b51eaed8dd77a5776b32e25e45e6",
          "linkedWithoutMetadata": "d6848d2aa87546ecbd49f015680e8ac96595b51eaed8dd77a5776b32e25e45e6"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts/referral/ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)18877_storage))",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)17484",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)17484": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)18877_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)18877_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)18877_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar": {
        "src": "contracts/registrar/IReverseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseRegistrar": {
        "src": "contracts/registrar/ReverseRegistrar.sol:26",
        "version": {
          "withMetadata": "2322421de5cbdd363c8a1c29a76027b98cad0beb933a4786cd6f1ee34aa8693c",
          "withoutMetadata": "dfd9da035bc4437a443914539daee606781266cde8fdc3e6593e0b0a26f6ef1d",
          "linkedWithoutMetadata": "dfd9da035bc4437a443914539daee606781266cde8fdc3e6593e0b0a26f6ef1d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)",
          "setController(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReverseRegistrar",
            "src": "contracts/registrar/ReverseRegistrar.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sid",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SidRegistry)20856",
              "contract": "ReverseRegistrar",
              "src": "contracts/registrar/ReverseRegistrar.sol:27"
            },
            {
              "label": "defaultResolver",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ReverseResolver)19830",
              "contract": "ReverseRegistrar",
              "src": "contracts/registrar/ReverseRegistrar.sol:28"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReverseRegistrar",
              "src": "contracts/registrar/ReverseRegistrar.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ReverseResolver)19830": {
              "label": "contract ReverseResolver",
              "numberOfBytes": "20"
            },
            "t_contract(SidRegistry)20856": {
              "label": "contract SidRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseResolver": {
        "src": "contracts/registrar/ReverseRegistrar.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "setTldName(bytes32,uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/ISidRegistry.sol:ISidRegistry": {
        "src": "contracts/registry/ISidRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/SidRegistry.sol:SidRegistry": {
        "src": "contracts/registry/SidRegistry.sol:9",
        "version": {
          "withMetadata": "fe79a2e8ed88cae1153370e53bdcdc4d85be78a66cf85997667f357e86d80235",
          "withoutMetadata": "6d674bf662233a5d64f29941e580cbdd25bd6ed1eb254ed320ef07fbf0153b8e",
          "linkedWithoutMetadata": "6d674bf662233a5d64f29941e580cbdd25bd6ed1eb254ed320ef07fbf0153b8e"
        },
        "inherit": [
          "contracts/registry/ISidRegistry.sol:ISidRegistry"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setOwner(bytes32,address)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SidRegistry",
            "src": "contracts/registry/SidRegistry.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "records",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(Record)20444_storage)",
              "contract": "SidRegistry",
              "src": "contracts/registry/SidRegistry.sol:16"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "SidRegistry",
              "src": "contracts/registry/SidRegistry.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Record)20444_storage)": {
              "label": "mapping(bytes32 => struct SidRegistry.Record)",
              "numberOfBytes": "32"
            },
            "t_struct(Record)20444_storage": {
              "label": "struct SidRegistry.Record",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "resolver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ttl",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/IMulticallable.sol:IMulticallable": {
        "src": "contracts/resolvers/IMulticallable.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface": {
        "src": "contracts/resolvers/ISupportsInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Multicallable.sol:Multicallable": {
        "src": "contracts/resolvers/Multicallable.sol:7",
        "inherit": [
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "multicall(bytes[])",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/resolvers/Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/PublicResolver.sol:PublicResolver": {
        "src": "contracts/resolvers/PublicResolver.sol:20",
        "version": {
          "withMetadata": "7fdc4ee8479efc02592998a4142e96245a8c5fc472a4515a696098075754dd29",
          "withoutMetadata": "c0faf623664d64d41c9a90e0ec473e6a1fc6a9bc513ec015aa45705f7283b614",
          "linkedWithoutMetadata": "c0faf623664d64d41c9a90e0ec473e6a1fc6a9bc513ec015aa45705f7283b614"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver",
          "contracts/resolvers/profiles/TextResolver.sol:TextResolver",
          "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver",
          "contracts/resolvers/profiles/NameResolver.sol:NameResolver",
          "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver",
          "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver",
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/Multicallable.sol:Multicallable",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "setNewTrustedController(address)",
          "removeTrustedController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PublicResolver",
            "src": "contracts/resolvers/PublicResolver.sol:51"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/resolvers/Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts/resolvers/profiles/ABIResolver.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:15"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts/resolvers/profiles/ContentHashResolver.sol:8"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts/resolvers/profiles/InterfaceResolver.sol:10"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts/resolvers/profiles/NameResolver.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)22503_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts/resolvers/profiles/PubkeyResolver.sol:13"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts/resolvers/profiles/TextResolver.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts/resolvers/profiles/TldNameResolver.sol:8"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "10",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "10",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sidRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(ISidRegistry)20431",
              "contract": "PublicResolver",
              "src": "contracts/resolvers/PublicResolver.sol:33"
            },
            {
              "label": "trustedControllers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PublicResolver",
              "src": "contracts/resolvers/PublicResolver.sol:34"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "PublicResolver",
              "src": "contracts/resolvers/PublicResolver.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ISidRegistry)20431": {
              "label": "contract ISidRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)22503_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)22503_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)22503_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Resolver.sol:Resolver": {
        "src": "contracts/resolvers/Resolver.sol:21",
        "inherit": [
          "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver",
          "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "setAddr(bytes32,address)",
          "setAddr(bytes32,uint256,bytes)",
          "setContenthash(bytes32,bytes)",
          "setDnsrr(bytes32,bytes)",
          "setName(bytes32,string)",
          "setPubkey(bytes32,bytes32,bytes32)",
          "setText(bytes32,string,string)",
          "setInterface(bytes32,bytes4,address)",
          "multicall(bytes[])",
          "content(bytes32)",
          "multihash(bytes32)",
          "setContent(bytes32,bytes32)",
          "setMultihash(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ResolverBase.sol:ResolverBase": {
        "src": "contracts/resolvers/ResolverBase.sol:7",
        "inherit": [
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "clearRecords(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/SupportsInterface.sol:SupportsInterface": {
        "src": "contracts/resolvers/SupportsInterface.sol:6",
        "inherit": [
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/mocks/DummyNameWrapper.sol:DummyNameWrapper": {
        "src": "contracts/resolvers/mocks/DummyNameWrapper.sol:6",
        "version": {
          "withMetadata": "dbad55f87a199e8a6c9794cde4cf1162cbf359b120b6691a07b2b378c0a1bd5f",
          "withoutMetadata": "8e5d2ff5fc745a6745dc6c543c40d7b821497c44cc200e8b37fb56884e8f4abd",
          "linkedWithoutMetadata": "8e5d2ff5fc745a6745dc6c543c40d7b821497c44cc200e8b37fb56884e8f4abd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver": {
        "src": "contracts/resolvers/profiles/ABIResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "ABI(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts/resolvers/profiles/ABIResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver": {
        "src": "contracts/resolvers/profiles/AddrResolver.sol:8",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver"
        ],
        "libraries": [],
        "methods": [
          "setAddr(bytes32,address)",
          "addr(bytes32)",
          "setAddr(bytes32,uint256,bytes)",
          "addr(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:15"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver": {
        "src": "contracts/resolvers/profiles/ContentHashResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver"
        ],
        "libraries": [],
        "methods": [
          "setContenthash(bytes32,bytes)",
          "contenthash(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts/resolvers/profiles/ContentHashResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ExtendedResolver.sol:ExtendedResolver": {
        "src": "contracts/resolvers/profiles/ExtendedResolver.sol:4",
        "version": {
          "withMetadata": "441450eb09cca88666068937bde0113ada4b758113ee80726591a7887b92c885",
          "withoutMetadata": "5536d00f475834f6e34ea2f5120683ca946005ca834e5e566234386a166c772c",
          "linkedWithoutMetadata": "5536d00f475834f6e34ea2f5120683ca946005ca834e5e566234386a166c772c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver": {
        "src": "contracts/resolvers/profiles/IABIResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ABI(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver": {
        "src": "contracts/resolvers/profiles/IAddrResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts/resolvers/profiles/IAddressResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts/resolvers/profiles/IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contenthash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver": {
        "src": "contracts/resolvers/profiles/IDNSRecordResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dnsRecord(bytes32,bytes32,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver": {
        "src": "contracts/resolvers/profiles/IDNSZoneResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "zonehash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedDNSResolver.sol:IExtendedDNSResolver": {
        "src": "contracts/resolvers/profiles/IExtendedDNSResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver": {
        "src": "contracts/resolvers/profiles/IExtendedResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver": {
        "src": "contracts/resolvers/profiles/IInterfaceResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "interfaceImplementer(bytes32,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/INameResolver.sol:INameResolver": {
        "src": "contracts/resolvers/profiles/INameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver": {
        "src": "contracts/resolvers/profiles/IPubkeyResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pubkey(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver": {
        "src": "contracts/resolvers/profiles/ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "text(bytes32,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver": {
        "src": "contracts/resolvers/profiles/ITldNameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tldName(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver": {
        "src": "contracts/resolvers/profiles/IVersionableResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordVersions(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver": {
        "src": "contracts/resolvers/profiles/InterfaceResolver.sol:9",
        "inherit": [
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver"
        ],
        "libraries": [],
        "methods": [
          "setInterface(bytes32,bytes4,address)",
          "interfaceImplementer(bytes32,bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:15"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts/resolvers/profiles/InterfaceResolver.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/NameResolver.sol:NameResolver": {
        "src": "contracts/resolvers/profiles/NameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver"
        ],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "name(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts/resolvers/profiles/NameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver": {
        "src": "contracts/resolvers/profiles/PubkeyResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver"
        ],
        "libraries": [],
        "methods": [
          "setPubkey(bytes32,bytes32,bytes32)",
          "pubkey(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)22503_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts/resolvers/profiles/PubkeyResolver.sol:13"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)22503_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)22503_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)22503_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TextResolver.sol:TextResolver": {
        "src": "contracts/resolvers/profiles/TextResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver"
        ],
        "libraries": [],
        "methods": [
          "setText(bytes32,string,string)",
          "text(bytes32,string)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts/resolvers/profiles/TextResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver": {
        "src": "contracts/resolvers/profiles/TldNameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver"
        ],
        "libraries": [],
        "methods": [
          "setTldName(bytes32,uint256,string)",
          "tldName(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts/resolvers/profiles/TldNameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/access/mocks/DummyTldAccessableImpl.sol:DummyTldAccessableImpl": {
        "src": "test/access/mocks/DummyTldAccessableImpl.sol:6",
        "version": {
          "withMetadata": "62774b711bc3081856912974f71146161acb3096b4684bf92bc761b3bf0c361d",
          "withoutMetadata": "4c5d0d5603f4b768b30eac9f0ee7b2c69390f71004b678d048d4a09c5ba316a7",
          "linkedWithoutMetadata": "4c5d0d5603f4b768b30eac9f0ee7b2c69390f71004b678d048d4a09c5ba316a7"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "testOnlyTldOwner(uint256)",
          "testOnlyFactory()",
          "testOnlyTldController()",
          "testOnlyPlatformAdmin()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyTldAccessableImpl",
            "src": "test/access/mocks/DummyTldAccessableImpl.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/admin/mocks/DummyUpgradeableSANN.sol:DummyUpgradeableSANN": {
        "src": "test/admin/mocks/DummyUpgradeableSANN.sol:6",
        "version": {
          "withMetadata": "694e2f2b621de010abd811bddc6f2e8a4cef87762a48081c89c3ac830c925f49",
          "withoutMetadata": "a6a39dcc841514de1f96661883eb925ecff67d7c7eca12822a7f06f0dd2f636d",
          "linkedWithoutMetadata": "a6a39dcc841514de1f96661883eb925ecff67d7c7eca12822a7f06f0dd2f636d"
        },
        "inherit": [
          "contracts/admin/SANN.sol:SANN",
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)5784_storage)",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)5784_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)5784_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/common/mocks/Dummy.sol:Dummy": {
        "src": "test/common/mocks/Dummy.sol:6",
        "version": {
          "withMetadata": "96a6be76eb2aa769aef1c8090fcf5d4a3ea512a5a353eb3c1c1f16ef98777943",
          "withoutMetadata": "894e69035c0fc52fc85e71c3feb606b50c756afb3c18c2c2590e5f72371967e8",
          "linkedWithoutMetadata": "894e69035c0fc52fc85e71c3feb606b50c756afb3c18c2c2590e5f72371967e8"
        },
        "inherit": [],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "containsZeroWidthChar(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/controller/mocks/DummyUpgradeableRegistrar.sol:DummyUpgradeableRegistrar": {
        "src": "test/controller/mocks/DummyUpgradeableRegistrar.sol:6",
        "version": {
          "withMetadata": "c9a816086ae717d9974ce64dce4f2f2a92984e6d7914045782b906f04ede787a",
          "withoutMetadata": "99bc0d66acc53fc3167938a1e0d43c769ed8c214eb002ac673351023c06d10d4",
          "linkedWithoutMetadata": "99bc0d66acc53fc3167938a1e0d43c769ed8c214eb002ac673351023c06d10d4"
        },
        "inherit": [
          "contracts/controller/RegistrarController.sol:RegistrarController",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)5218",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts/access/TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)5034",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts/access/TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)8295_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)8317_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)17484)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)5068",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)17484",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)19807",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)5034": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)15260": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)5068": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)15299": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)17484": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)15334": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)15381": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)15420": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)15471": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)19807": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)15522": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5218": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)17484)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)8295_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)8317_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)8295_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)8317_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)15334",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)15299",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)15260",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)15522",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)15420",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)15381",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)15471",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/preregistration/mocks/DummyOracle.sol:DummyOracle": {
        "src": "test/preregistration/mocks/DummyOracle.sol:4",
        "version": {
          "withMetadata": "39d04113f4562b3834cad8508b1372692a074450b01fc111c738128f04044cb2",
          "withoutMetadata": "26ea520bc4f047c80dc39ea7a4c744b8941c1157cc86e27c13b9d1369f67812a",
          "linkedWithoutMetadata": "26ea520bc4f047c80dc39ea7a4c744b8941c1157cc86e27c13b9d1369f67812a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(int256)",
          "set(int256)",
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyOracle",
            "src": "test/preregistration/mocks/DummyOracle.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "value",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "DummyOracle",
              "src": "test/preregistration/mocks/DummyOracle.sol:5"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    }
  ]
}